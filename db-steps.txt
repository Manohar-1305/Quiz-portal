
============================================================
sudo apt update
sudo apt install mysql-server -y
sudo mysql_secure_installation
sudo systemctl status mysql
sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf
sudo sed -i 's/^bind-address\s*=.*/bind-address = 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
grep 'bind-address' /etc/mysql/mysql.conf.d/mysqld.cnf


sudo systemctl restart mysql
sudo systemctl enable mysql
systemctl status  mysql

sudo mysql -u root -p

-----------------------------------------------------
SHOW DATABASES;
SELECT user, host FROM mysql.user;
CREATE DATABASE quizdb;
CREATE USER 'quiz_user'@'%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON quizdb.* TO 'quiz_user'@'%';
FLUSH PRIVILEGES;
EXIT;
USE quizdb;
SHOW TABLES;
CREATE TABLE user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(512) NOT NULL,
    is_admin TINYINT(1) NOT NULL
);
ALTER TABLE user MODIFY COLUMN password VARCHAR(512);
------------------------------------
- Get the quizes from the database
SELECT * FROM quiz;
SELECT * FROM topic;
INSERT INTO topic (name) VALUES ('Docker');

-------------------------------------
- Create a Quiz
INSERT INTO quiz (question, option1, option2, option3, option4, correct_answer, topic_id) 
VALUES ('What is Amazon EC2?', 
        'A cloud storage service', 
        'A virtual machine service', 
        'A database service', 
        'A content delivery network', 
        'A virtual machine service', 
        3);
-------------------------------------------------------------------------------------------------------
INSERT INTO quiz (question, option1, option2, option3, option4, correct_answer, topic_id)  
VALUES  
('What is the purpose of Kubernetes?', 'Continuous Integration', 'Container Orchestration', 'Configuration Management', 'Cloud Storage', 'Container Orchestration', 1),  
('Which component manages the worker nodes in Kubernetes?', 'Pod', 'Kubelet', 'Kube-apiserver', 'Controller Manager', 'Kubelet', 1),  
('Which AWS service is used for virtual machines?', 'S3', 'EC2', 'Lambda', 'RDS', 'EC2', 5),  
('What is Terraform mainly used for?', 'Container Orchestration', 'Infrastructure as Code', 'CI/CD', 'Monitoring', 'Infrastructure as Code', 3),  
('Which tool is used for configuration management?', 'Docker', 'Terraform', 'Ansible', 'Kubernetes', 'Ansible', 4),  
('Which service in AWS is used for object storage?', 'EC2', 'RDS', 'S3', 'IAM', 'S3', 5),  
('What is the main purpose of Docker?', 'Creating Virtual Machines', 'Application Containerization', 'Cloud Storage', 'CI/CD', 'Application Containerization', 2),  
('Which component in Docker is responsible for running containers?', 'Pod', 'Container', 'Docker Daemon', 'Registry', 'Container', 2),  
('What is an AMI in AWS?', 'Amazon Machine Image', 'Application Management Interface', 'AWS Management Instance', 'Amazon Monitoring Infrastructure', 'Amazon Machine Image', 5),  
('Which command is used to create infrastructure in Terraform?', 'terraform apply', 'terraform build', 'terraform create', 'terraform run', 'terraform apply', 3);

SELECT * FROM quiz WHERE topic_id = 3;
------------------------------------------------------------------------------------------------------------------------------------------------------------

mysql -h 43.205.191.196 -u quiz_user -p

sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf
bind-address = 0.0.0.0
sudo systemctl restart mysql

pip install mysqlclient flask-mysql flask-sqlalchemy
pip install flask-sqlalchemy mysqlclient
pip install mysql-connector-python


sudo mkdir -p mysql-config && echo -e "[mysqld]\nbind-address = 0.0.0.0" | sudo tee mysql-config/mysqld.cnf > /dev/null
sudo mkdir -p mysql-init && echo -e "CREATE DATABASE IF NOT EXISTS quizdb;\nCREATE USER IF NOT EXISTS 'quiz_user'@'%' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON quizdb.* TO 'quiz_user'@'%';\nFLUSH PRIVILEGES;" | sudo tee mysql-init/init.sql > /dev/null

ON quizdb.* TO 'quiz_user'@'%';\nFLUSH PRIVILEGES;" > mysql-init/init.sql
